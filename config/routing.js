module.exports = [ { id:"overview",
    alias:"Overview",
    type:"category",
    route:"overview",
    items:[ { id:"vision",
        alias:"Vision",
        type:"route",
        route:"overview.vision",
        keywords:"ciena design conventions styles components patterns and tools for ember what is frost the common ember platform for ciena web development teams with dedicated ux and visual design teams and a large community of contributing developers frost is also a major step forward in ciena s evolution as a software organization as the majority of this platform will be open source general tools ember cli blanket ember prop types ember pollboy ember block slots webdriverio see ciena blueplanet for additional projects app components and patterns ember frost core ember frost bunsen ember frost object browser ember frost object details see ciena frost for additional projects where is frost going as with software development in general frost is a journey not a destination we re constantly refining our designs and technical skills and frost is a reflection of this progression we want to collaborate as a community have our ideas challenged and continually evolve the platform that said no platform can be all things to all people so frost focuses on the following key concepts visual design conventions frost backs large data driven tools and we believe that a single high quality visual design is more valuable to the building of these tools than visual customization we aren t intending on competing with the excellent existing products focused on customization such as bootstrap or foundation instead we intend to make the construction of complex visual patterns a more accessible process by allowing developers to focus less on visuals and more on solving use cases frost allows customization of color themes but will be fairly proscriptive over the look and behavior of components language conventions we love the ember community and all of the addons available are incredibly inspiring however addons often have different interface conventions and remembering the conventions can be challenging all of the components in frost will present a consistent style of interface whether the component is original to frost or an interface shim around a community addon extending beyond core components this is where the benefits of following conventions comes into play beyond the core of frost is an ecosystem of complex components that build off of the core data driven forms filter sort list browsers component based svg visualizations geo map overlays a constantly expanding list of solutions with accessible designs ready to be plugged into frost based applications robustness and developer support none of these concepts are any good unless they can be relied on frost projects will contain comprehensive behavioral and visual tests for each component and tool backed by useful measures of coverage and complexity we have passionate developers that focus on making these standards easy to scaffold and maintain stay tuned for open source releases and blogs that make these tools and processes accessible to the community suggestions ideas does any of this sound appealing want to participate we re always open to ideas and we love talking about designs propose a component work with us to build something tell us we ve got it all wrong we want to collaborate with and be challenged by you " },
      { id:"roadmap",
        alias:"Roadmap",
        type:"route",
        route:"overview.roadmap",
        keywords:"priority ember block slots effortless named yields ember frost icon pack icon pack extensions to frost icon ember frost list infinite scroll backlog robustness visual regression tests in all projects blog addon philosophy and current best practices ember frost core add ember cli autoprefixer as an opinionated install ember addon snippets addon provided snippets for editors ember frost grid a full featured grid library shim ember frost list range selection ember frost task hub task logs and monitoring frost sports a demo app for key frost concepts " } ] },
  { id:"ui-components",
    alias:"UI Components",
    type:"category",
    route:"ui-components",
    items:[ { id:"input-fields",
        alias:"Input Fields",
        type:"category",
        route:"ui-components.input-fields",
        items:[ { id:"text-field",
            alias:"Text Field",
            type:"route",
            route:"ui-components.input-fields.text-field",
            keywords:"summary accept and display input text related topics auto complete text field suggestions based on a data source password masked text input to hide characters text area text input with multiple rows behaviors accepts and displays input text input text is left aligned but can be right aligned when required e g some numeric input focusing the component selects any existing input text focusing the component displays a clear button which can remove all input text may conditionally indicate an error state can display a prompt when required roadmap can display units of measure when required guidelines validate input when possible if invalid input text is provided the text field indicates an error state when the text field loses focus see forms for standard error text positioning display appropriate units of measure when the text field value will be interpreted according to a unit of measure e g gb mb kb use prompt text as a last resort to supplement context labels and instructions avoid overflow when possible by sizing text fields to comfortably accomodate the expected input length ",
            items:[ { id:"min",
                alias:"First",
                type:"route",
                route:"link.min" } ] },
          { id:"text-area",
            alias:"Text Area",
            type:"route",
            route:"ui-components.input-fields.text-area",
            keywords:"summary accept and display multiple rows of input text related topics auto complete text field suggestions based on a data source password masked text input to hide characters text field basic text input behaviors accepts and displays multiple rows of input text displays a minimum of 2 rows text input will wrap on x overflow and scroll on y overflow focusing the component selects any existing input text focusing the component displays a clear button which can remove all input text scroll is still operational when the text area is disabled may conditionally indicate an error state guidelines use for free form text on the scale of one or more sentences e g notes or descriptions validate input when possible if invalid input text is provided the text area indicates an error state when the text area loses focus see forms for standard error text positioning minimize overflow when possible by sizing text areas to accomodate at least 50 of the expected input length ",
            items:[ { id:"min",
                alias:"First",
                type:"route",
                route:"link.min" } ] },
          { id:"password",
            alias:"Password",
            type:"route",
            route:"ui-components.input-fields.password",
            keywords:"summary accept and display masked input text related topics auto complete text field suggestions based on a data source text area text input with multiple rows text field basic text input behaviors accepts and displays masked input text input text is left aligned focusing the component selects any existing input text focusing the component displays a clear button which can remove all input text indicates when caps lock is on may conditionally indicate an error state can toggle between masked and unmasked input text when required can display a prompt when required guidelines validate input when possible if invalid input text is provided the text field indicates an error state when the text field loses focus see forms for standard error text positioning when appropriate allow the masked input text to be revealable e g to avoid entering a duplicate confirmation password when setting a new password use prompt text as a last resort to supplement context labels and instructions avoid overflow when possible by sizing text fields to comfortably accomodate the expected input length ",
            items:[ { id:"min",
                alias:"First",
                type:"route",
                route:"link.min" } ] },
          { id:"checkbox",
            alias:"Checkbox",
            type:"route",
            route:"ui-components.input-fields.checkbox",
            keywords:"summary display and toggle the state of a true false property related topics checkbox group select multiple values for a property from a short list of values radio group select a single value for a property from a short list of values select select single or multiple values for a property from a medium long list of values behaviors displays the current state of a true false property toggles the state of the true false property on mouse click or keyboard space input usage guidelines checkbox labels should be used to clarify the state being displayed see writing for label conventions place labels on the right of the check box don t combine checkboxes in an ad hoc pattern look into the related topics if you need more than a simple state toggle ",
            items:[ { id:"min",
                alias:"First",
                type:"route",
                route:"link.min" } ] },
          { id:"checkbox-group",
            alias:"Checkbox Group",
            type:"route",
            route:"ui-components.input-fields.checkbox-group",
            keywords:"summary display and select multiple values for a property from a short list of values related topics checkbox toggle the state of a true false property radio group select a single value for a property from a short list of values select select single or multiple values for a property from a medium long list of values behaviors displays and allows selection of multiple values for a property displays a group label for the property displays individual labels for each value checkbox can display the group in either a vertical or horizontal arrangement toggles the state of the property value checkbox on mouse click or keyboard space input usage guidelines limit the available values use a select for longer lists of values don t use checkbox groups for single selection look into the related topics if your property requires a single value use vertical horizontal arrangment according to the container vertical for narrow containers horizontal for wide containers " } ] } ] },
  { id:"contributing",
    alias:"Contributors",
    type:"route",
    route:"contributors",
    items:[ { id:"contributors",
        alias:"Contributors",
        type:"route",
        route:"contributors.contributors" },
      { id:"contributor",
        alias:"Contributor",
        type:"route",
        route:"contributors.contributor" } ] } ]
